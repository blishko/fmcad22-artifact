; sally-chc-benchmarks/./misc/Ex3_000.smt2
(set-logic HORN)

(declare-fun |invariant| ( Real Real Real Real Real Real Real Real Real Real Real ) Bool)

(assert
  (forall ( (A Real) (B Real) (C Real) (D Real) (E Real) (F Real) (G Real) (H Real) (I Real) (J Real) (K Real) ) 
    (=>
      (and
        (and (= H 0.0)
     (= G (+ 1.0 H))
     (= F H)
     (= E 1.0)
     (= D 0.0)
     (= C (+ 1.0 D))
     (= B D)
     (= A 1.0)
     (not (<= 5.0 K))
     (not (<= 5.0 J))
     (<= 0.0 K)
     (<= 0.0 J)
     (= I 0.0))
      )
      (invariant A B C D E F G H I J K)
    )
  )
)
(assert
  (forall ( (A Real) (B Real) (C Real) (D Real) (E Real) (F Real) (G Real) (H Real) (I Real) (J Real) (K Real) (L Real) (M Real) (N Real) (O Real) (P Real) (Q Real) (R Real) (S Real) (T Real) (U Real) (V Real) ) 
    (=>
      (and
        (invariant A C E G I K M O Q S U)
        (let ((a!1 (or (and (<= Q (+ (- 5.0) T))
                    (<= T (+ 5.0 Q))
                    (= P O)
                    (= Q S)
                    (= V U)
                    (= H E))
               (and (<= Q (+ (- 5.0) V))
                    (<= V (+ 5.0 Q))
                    (= P M)
                    (= Q U)
                    (= T S)
                    (= H G)))))
(let ((a!2 (or (and a!1 (= R Q))
               (and (or (= R S) (= R U))
                    (<= R S)
                    (<= R U)
                    (not (<= S Q))
                    (not (<= U Q))
                    (= P O)
                    (= T S)
                    (= V U)
                    (= H G)))))
  (and (= J 1.0)
       (= I 1.0)
       (= F (+ 1.0 H))
       (= E (+ 1.0 G))
       (= D H)
       (= C G)
       (= B 1.0)
       (= A 1.0)
       (= N (+ 1.0 P))
       (= M (+ 1.0 O))
       (= L P)
       a!2
       (= K O))))
      )
      (invariant B D F H J L N P R T V)
    )
  )
)
(assert
  (forall ( (A Real) (B Real) (C Real) (D Real) (E Real) (F Real) (G Real) (H Real) (I Real) (J Real) (K Real) ) 
    (=>
      (and
        (invariant A B C D E F G H I J K)
        (let ((a!1 (not (<= (+ H (* (- 1.0) D)) 1.0)))
      (a!2 (not (<= (- 1.0) (+ H (* (- 1.0) D))))))
  (or a!1 a!2))
      )
      false
    )
  )
)

(check-sat)
(exit)
